# 2023-01-31: Attempt at a Circle CI yaml -- combination of these:
# 
# Continuous Integration with Circle-CI
# https://discourse.julialang.org/t/continuous-integration-with-circle-ci/11642
# https://app.circleci.com/projects/project-setup/github/nmatzke/PhyBEARS.jl
#
# ...but, we'd have to figure out a way to add:
#  PhyloBits dependency
#  data files from local install
#
# Abandoning for now

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: julia:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Circle CI .circleci/config.yml says Hello, World!"
          command: print("Circle CI .circleci/config.yml says Hello, World!")
  build:
    docker:
      - image: julia:stable                # image comes from Docker hub
    steps:
      - checkout
      - run:
          name: Install and Test this package
          command: julia -e 'using Pkg; Pkg.update(); Pkg.clone(pwd()); Pkg.build("PhyBEARS.jl"); Pkg.test("PhyBEARS.jl");'
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
  build-workflow:
    jobs:
      - build